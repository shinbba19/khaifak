import streamlit as st
from datetime import datetime, timedelta
from db_utils import run_query, reset_db

st.title("üè° ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå")

# --- Reset Button ---
if st.sidebar.button("‚ôªÔ∏è Reset Database"):
    reset_db()
    st.sidebar.success("Database ‡∏ñ‡∏π‡∏Å‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‚úÖ")

# --- Add Owner ---
st.subheader("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á")
name = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á")
contact = st.text_input("‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠")
if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á"):
    if name.strip() == "" or contact.strip() == "":
        st.error("‚ùå ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠")
    else:
        run_query("INSERT INTO owners (name, contact) VALUES (?,?)", (name, contact))
        st.success("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‚úÖ")

st.markdown("---")

# --- Add Property ---
st.subheader("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå")
owner_id = st.number_input("Owner ID", min_value=1)
location = st.text_input("‡∏ó‡∏≥‡πÄ‡∏•")
district_type = st.selectbox("‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏≥‡πÄ‡∏•", [1, 2, 3])
nbr_floors = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏∂‡∏Å", min_value=1, value=8)
units = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏¢‡∏π‡∏ô‡∏¥‡∏ï", min_value=1, value=200)
bld_age = st.number_input("‡∏≠‡∏≤‡∏¢‡∏∏‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ (‡∏õ‡∏µ)", min_value=0, value=5)
room_size = st.number_input("‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡πâ‡∏≠‡∏á (‡∏ï‡∏£.‡∏°.)", min_value=10.0, value=30.0, step=1.0)
value = st.number_input("‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏ô‡∏≠ (‡∏ö‡∏≤‡∏ó)", min_value=100000.0, value=1000000.0, step=50000.0)
redemption_days = st.number_input("‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ñ‡πà‡∏ñ‡∏≠‡∏ô (‡∏ß‡∏±‡∏ô)", min_value=30, value=180)

if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå"):
    # ‚úÖ Validation
    if location.strip() == "":
        st.error("‚ùå ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏≥‡πÄ‡∏•")
    elif room_size <= 0:
        st.error("‚ùå ‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0")
    elif value <= 0:
        st.error("‚ùå ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏™‡∏ô‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0")
    elif units <= 0 or nbr_floors <= 0:
        st.error("‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏¢‡∏π‡∏ô‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πâ‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0")
    else:
        start = datetime.today().strftime("%Y-%m-%d")
        end = (datetime.today() + timedelta(days=redemption_days)).strftime("%Y-%m-%d")

        # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö schema
        cols = [c[1] for c in run_query("PRAGMA table_info(properties);", fetch=True)]

        if all(col in cols for col in ["district_type", "nbr_floors", "units", "bld_age", "room_size"]):
            run_query("""INSERT INTO properties 
                         (owner_id, location, district_type, nbr_floors, units, bld_age, room_size, value, start_date, end_date, status) 
                         VALUES (?,?,?,?,?,?,?,?,?,?,?)""",
                      (owner_id, location, district_type, nbr_floors, units, bld_age, room_size, value, start, end, "‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô"))
        elif all(col in cols for col in ["district_type", "nbr_floors", "units", "bld_age"]):
            run_query("""INSERT INTO properties 
                         (owner_id, location, district_type, nbr_floors, units, bld_age, value, start_date, end_date, status) 
                         VALUES (?,?,?,?,?,?,?,?,?,?)""",
                      (owner_id, location, district_type, nbr_floors, units, bld_age, value, start, end, "‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô"))
        else:
            run_query("""INSERT INTO properties 
                         (owner_id, location, value, start_date, end_date, status) 
                         VALUES (?,?,?,?,?,?)""",
                      (owner_id, location, value, start, end, "‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô"))

        st.success("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‚úÖ")
